<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[abstract class和interface]]></title>
      <url>/java/abstract%20class%E5%92%8Cinterface/</url>
      <content type="html"><![CDATA[<p>大致的来说，interface也许算是abstract class的变体，都不可以实例化。只不过有些地方有区别，比如子类：interface是实现（还可以多个），abstract class是继承（单个）。</p>
<p>比较</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>abstract class</th>
<th>interface</th>
</tr>
</thead>
<tbody>
<tr>
<td>成员变量</td>
<td>可以拥有自己的成员变量</td>
<td>如果要有必须为 static final</td>
<td></td>
</tr>
<tr>
<td>方法类型</td>
<td>private、不是abstract</td>
<td>public abstract</td>
<td></td>
</tr>
<tr>
<td>实例化</td>
<td>不可以实例化，且子类都必须实现已声明的抽象方法</td>
<td>同</td>
<td></td>
</tr>
<tr>
<td>子类数量</td>
<td>一个类只能继承一个abstract class</td>
<td>一个类实现多个interface</td>
<td></td>
</tr>
<tr>
<td>子类的方法</td>
<td>可以选择性的实现哪些方法</td>
<td>某个方法必须实现</td>
<td></td>
</tr>
<tr>
<td>与子类的联系</td>
<td>abstract class中可以有非抽象的方法，子类中是必须实现有abstract的方法。非abstract方法可以选择继承或者重写覆盖。</td>
<td>interface中的方法都是抽象的，而且默认的都是public，且不能声明private和protected。</td>
<td></td>
</tr>
<tr>
<td>使用场景</td>
<td>重要的就是需要一个统一的接口并且需要声明一个变量的情况，不希望也不需要子类实现所有的方法，只需要子类实现某些特定的方法。并且可以有共用的方法，也可以考虑abstract class。</td>
<td>不在乎他的子类是如何实现的，只需要保证接口一致的协调性。需要多种类型的方法，但是又是分开写的互不干扰，可以选择interface的形式。</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>注：interface 可以拿来定义一些常量，而不使用static class来定义。</strong></p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> interface </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
